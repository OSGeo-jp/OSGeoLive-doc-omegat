<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE tmx SYSTEM "tmx14.dtd">
<tmx version="1.4">
  <header creationtool="Translate Toolkit" creationtoolversion="3.1.1" segtype="sentence" o-tmf="UTF-8" adminlang="en" srclang="en" datatype="PlainText"/>
  <body>
    <tu>
      <tuv xml:lang="en">
        <seg>MapServer Quickstart</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>MapServer クイックスタート</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>MapServer is an `Open Source &lt;https://opensource.org/&gt;`_ server based application that allows you to publish geographic map images and vector data through the internet using |OGCS| such as |WMS|, |WFS| and |WCS|.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>MapServerは、 `オープンソース &lt;https://opensource.org/&gt;`_ サーバーベースのアプリケーションであり、|WMS|、|WFS|、|WCS|などの |OGCS| を使用して、インターネットを介して地理的地図の画像やベクタデータを公開できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Configure MapServer using the Mapfile configuration file</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>Mapfile設定ファイルを使用してMapServerを設定する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>**What will I learn ?** In this section, you will learn what a Mapfile is and how to configure it to allow MapServer to serve a shapefile as images using WMS requests.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>**何がわかる？** ここでは、Mapfileの概要と、MapServerがWMS要求を使用してシェイプファイルをイメージとして処理できるように設定する方法について説明します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>What is a Mapfile ?</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>Mapfileとは</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The `Mapfile &lt;https://mapserver.org/mapfile/index.html&gt;`_ is the configuration file that MapServer uses to render geospatial data as images or vector data. Its main purpose is to define the layers it can draw, how to read necessary data, and how to render it (e.g. color, symbol, label, etc...).</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>`Mapfile&lt;https://mapserver.org/mapfile/index.html&gt;`_ は、MapServerが空間データをイメージまたはベクタデータとしてレンダリングするために使用する設定ファイルです。その主な目的は、描画できるレイヤ、必要なデータの読み方、レンダリング方法(色、シンボル、ラベルなど)を定義することです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Creating my first Mapfile</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>はじめてMapfileを作成する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Open any text editor (e.g. :menuselection:`Applications --&gt; Accessories --&gt; FeatherPad`).</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>任意のテキストエディタを開きます(例 :menuselection:`アクセサリ--&gt;FeatherPad`)。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Create the file "mapserver_quickstart.map" in your home directory: :file:`/home/user/mapserver_quickstart.map`</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>"mapserver_quickstart.map"を、ホームディレクトリ::file:`/home/user/mapserver_quickstart.map`に作成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Put the following content in it::</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>次の内容を入力します::</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The example uses the natural earth dataset, which is already on OSGeoLive at :file:`~/data/natural_earth2` (a short cut to :file:`/usr/local/share/data/natural_earth2`).</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>この例では、既にOSGeoLive上の :file:`~/data/natural_earth2`(:file:`/usr/local/share/data/natural_earth2` へのショートカット)にある自然地球データセットを使用しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Each object in a Mapfile starts with its name (for example **MAP**) and ends with an **END**.  A Mapfile always starts with the **MAP** object and should contain a list of **LAYER** objects the Mapfile can read and draw. In our Mapfile, we currently have only one layer defined.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>Mapfile内の各オブジェクトは、名前(**MAP**など)で始まり、**END**で終わります。Mapfileは常に**MAP**オブジェクトで始まり、Mapfileが読み取って描画できる**LAYER**オブジェクトのリストを含む必要があります。このMapfileでは、いまのところ1つのレイヤのみが定義されています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Let's take a look at some of the objects (and properties) defined in our Mapfile:</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>Mapfileで定義されているオブジェクト(およびプロパティ)をいくつか見てみましょう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>EXTENT: sets the default geospatial bounding box for this configuration.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>EXTENT:この設定のデフォルトの空間境界ボックスを設定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>LAYER: defines access and display properties for a spatial dataset.  We'll add another layer later.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>LAYER: 空間データセットのアクセスプロパティと表示プロパティを定義します。レイヤは後で追加します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>SHAPEPATH: sets a base path for file-based data (e.g. shapefiles or tiff images).</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>SHAPEPATH:ファイルベースのデータ(シェイプファイルやTIFFイメージなど)のベースパスを設定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>If we look closer at the **LAYER** in our Mapfile, we'll see that it contains a bunch of properties and objects too. Among them are:</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>Mapfileの**LAYER**をよく見ると、このファイルにはたくさんのプロパティーとオブジェクトも含まれていることがわかります。その中には次のようなものがあります</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>STATUS: defines whether the layer can be drawn (*ON*), can't be drawn (*OFF*) or is always drawn (*DEFAULT*).</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>STATUS: レイヤを描画できる(*ON*)か、描画できない(*OFF*)か、常に描画する(*DEFAULT*)かを定義します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>TYPE: the geometry type that MapServer should use when rendering the data as an image. In our Mapfile, the data will be drawn as *polygons*.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>TYPE: MapServerがデータをイメージとしてレンダリングするときに使用するジオメトリタイプ。このMapfileでは、データは*ポリゴン*として描画されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>DATA: the name of the spatial data file this layer uses, in this case a shapefile.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>DATA:このレイヤが使用する空間データファイル(この場合はシェイプファイル)の名前。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>CLASS: determines how to draw a layer (styling). We'll cover this object in more detail later.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>CLASS: レイヤの描画方法(スタイル設定)を決定します。このオブジェクトについては、後で詳しく説明します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>A complete list of the available objects and properties a Mapfile can have can be found in the `MapServer documentation page &lt;https://mapserver.org/mapfile/index.html&gt;`_.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>Mapfileで使用できるオブジェクトとプロパティの完全なリストは、 `MapServerドキュメントページ &lt;https://mapserver.org/mapfile/index.html&gt;`_ にあります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Render a map image with MapServer using a WMS **GetMap** request</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>WMSの**GetMap**要求を使用してMapServerで地図イメージをレンダリングする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>**What will I learn ?** You will learn how to use to render an image with layers from a Mapfile with MapServer using an OGC WMS request.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>**何を学べますか?** OGC WMS要求を使用して、MapServerを使用してMapfileからレイヤを含むイメージをレンダリングする方法を学習します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Open a web browser and enter the following URL::</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>Webブラウザを開き、次のURLを入力します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>What does the above mean?  If we put it in simple words, it's a |WMS| **GetMap** request that tells MapServer to "*use the following Mapfile to render the specified layers as a png image based on some user-supplied parameters such as image size, geographical extent, projection, etc.*".  All layers specified in the "*&amp;LAYERS=...*" property having *STATUS ON* in the Mapfile will be rendered in addition to all layers with *STATUS DEFAULT*. The result looks like the following:</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>上記はどういう意味ですか?簡単に言うと、これはWMSの**GetMap**要求であり、「*次のMapfileを使用して、イメージサイズ、地理的範囲、投影などのユーザ指定のパラメータに基づいて、指定されたレイヤをpngイメージとしてレンダリングする*」ようMapServerに指示します。Mapfileで*STATUS ON*を持つ"*&amp;LAYERS=.*"プロパティで指定されたすべてのレイヤは、*STATUS DEFAULT*を持つすべての画層に加えてレンダリングされます。結果は次のようになります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>All parameters of the request are WMS-specific, except "*?map=/home/user/mapserver_quickstart.map*", which is MapServer-specific.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>要求のすべてのパラメータは、MapServer固有の「*?map=/home/user/mapserver_quickstart.map*」を除き、WMS固有です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Render a map image with MapServer using the command line</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>コマンドラインを使用してMapServerで地図イメージをレンダリングする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Although MapServer is geared towards web applications, it can also produce images on the command line. This can be useful if you are looking for repetitive mapping, or while debugging.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>MapServerはウェブアプリケーション向けだが、コマンドラインで画像を生成することもできます。これは、反復マッピングを探している場合やデバッグ中に便利です。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Open a terminal (:menuselection:`Applications --&gt; System Tools --&gt; Terminal Emulator`) and type::</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>ターミナルを開き(:menuselection:`Applications--&gt;System Tools--&gt;Terminal Emulator`)、次のように入力します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>If this command runs successfully, you are able to see your rendered map at file:///home/user/mymap.png.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>このコマンドが正常に実行されると、file:///home/user/mymap.pngでレンダリングされたマップを表示できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Add a new layer to the Mapfile to serve a local Shapefile</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>新しいレイヤをMapfileに追加して、ローカルシェイプファイルを提供する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>**What will I learn ?** You will learn how to add a new layer object definition to your Mapfile.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>**何を学べますか?**新しいレイヤオブジェクト定義をMapfileに追加する方法を学習します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>We will now add a new layer to our Mapfile. Before the last *END* statement in the Mapfile, add the following layer configuration::</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>次に、新しいレイヤをMapfileに追加します。Mapfileの最後の*END*文の前に、次のレイヤ設定を追加します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Now we have 2 layer definitions in our Mapfile. Note that the new one we just added has the "STATUS" property set to "ON". That means that unless we specifically request it, it won't be rendered.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>これで、Mapfileに2つのレイヤ定義が作成されました。ここで追加した新しいオブジェクトの「STATUS」プロパティが「ON」に設定されていることに注意してください。具体的にお願いしないと出せないということですね。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Let's take our previous WMS **GetMap** request and add our new "Lakes" layer to the image rendered. We simply need to add the new layer name to the "LAYERS" property list::</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>前述のWMSの**GetMap**要求を受け取り、レンダリングしたイメージに新しい「Lakes」レイヤを追加します。「LAYERS」プロパティリストに新しいレイヤ名を追加するだけです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The image rendered by MapServer looks like our previous map, but with the addition of the lakes from our new layer:</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>MapServerによってレンダリングされたイメージは、前のマップに似ていますが、新しいレイヤから湖が追加されています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Style a layer using Mapfile configurations</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>マップファイル設定を使用してレイヤのスタイルを設定する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>**What will I learn ?** You will see an example of styling elements inside a layer depending on some of its data properties.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>**何を学ベますか?** レイヤ内の要素のスタイル設定の例が、データプロパティの一部に応じて表示されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>In a Mapfile, a LAYER object can contain an infinite number of CLASS objects. These are used to style the elements contained in the spatial data file (DATA). For example, if we look closer at our "ne_10m_lakes" data file using a tool such as `ogrinfo &lt;https://gdal.org/ogrinfo.html&gt;`_, we'll see the geometry and attribute definitions it contains. These attribute values can be used as a way to draw the elements inside a dataset differently using multiple CLASS objects.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>Mapfileでは、LAYERオブジェクトに無限個のCLASSオブジェクトを含めることができます。これらは、空間データファイル(DATA)に含まれる要素のスタイルを設定するために使用されます。たとえば、`ogrinfo&lt;https://gdal.org/ogrinfo.html&gt;`_などのツールを使用して"ne_10m_lakes"データファイルを詳しく調べると、このファイルに含まれるジオメトリと属性定義がわかります。 これらの属性値は、複数のCLASSオブジェクトを使用してデータセット内の要素を異なる方法で描画する方法として使用できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>In our "ne_10m_lakes" dataset, we have a *ScaleRank* attribute, which seems to be related to the size of the lakes. We can use this as a way to render the lakes differently. In the LAYER object, we'll add another CLASS object just before our current one::</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>"ne_10m_lakes"データセットには、湖の大きさに関係すると思われる*ScaleRank*属性がある。これを使って湖を違った形にレンダリングすることができますLAYERオブジェクトでは、現在のオブジェクトの直前に別のCLASSオブジェクトを追加します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>What does our new CLASS object do? It basically tells MapServer to draw the elements having the "ScaleRank" property equal to "0" or "1" with a black outline. Class objects are always read from the top to the bottom for each feature to be drawn. When a feature matches the "EXPRESSION" specified in a class, that class is going to render the feature. If the feature does not match a class the next class is checked. If a feature does not match any class then it is not rendered at all but if the last class in a layer contains no EXPRESSION then that class acts as a default. The LAYER "CLASSITEM" property tells MapServer which attribute to use when evaluating EXPRESSIONs defined in the CLASS objects.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>新しいCLASSオブジェクトは何をしますか?基本的には、MapServerに対して、「0」または「1」に等しい「ScaleRank」プロパティを持つ要素を黒いアウトラインで描画するように指示します。クラスオブジェクトは、描画されるフィーチャごとに常に上から下に読み込まれます。フィーチャがクラスで指定された「EXPRESSION」に一致すると、そのクラスはフィーチャをレンダリングします。フィーチャがクラスと一致しない場合、次のクラスがチェックされます。フィーチャがどのクラスとも一致しない場合、フィーチャはまったくレンダリングされませんが、画層の最後のクラスにEXPRESSIONが含まれていない場合、そのクラスが既定として機能します。LAYERの「CLASSITEM」プロパティは、CLASSオブジェクトで定義された式を評価するときに使用する属性をMapServerに伝えます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The result of this new addition should make the big lakes in our map image rendered with a black outline:</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>この新しい追加の結果、地図イメージ内の大きな湖が黒いアウトラインでレンダリングされます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Learn more about `EXPRESSIONS &lt;https://mapserver.org/mapfile/expressions.html&gt;`_ in MapServer.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>MapServerの `EXPRESSIONS &lt;https://mapserver.org/mapfile/expressions.html&gt;`_ の詳細をご覧ください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Publish your data as OGC WMS (Web Map Service)</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>データをOGC WMS(Web Map Service)としてパブリッシュする</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>MapServer supports different OGC Standards like OGC WMS, WFS or WCS. With OGC WMS you can publish your data as a Map Service and integrate the service in a Desktop GIS like QGIS or in a Web Client like OpenLayers or Mapbender.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>MapServerは、OGC WMS、WFS、WCSなど、さまざまなOGC標準をサポートしています。OGC WMSを使用すると、データをマップサービスとしてパブリッシュし、QGISのようなデスクトップGISや、OpenLayersやMapbenderのようなWebクライアントでサービスを統合できます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Using QGIS Desktop to load your OGC WMS</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>QGISデスクトップを使用したOGC WMSのロード</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Start QGIS via :menuselection:`Geospatial --&gt; Desktop GIS --&gt; QGIS Desktop`. Go to :menuselection:`Layer --&gt; Add Layer --&gt; Add WMS/WMTS Layer`.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>QGISの起動方法:menuselection:`Geospatial--&gt;Desktop GIS--&gt;QGIS Desktop` :menuselection:`Layer --&gt; Add Layer --&gt; Add WMS/WMTS Layer`にいく</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Click button **New** and add a name and your Service URL</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>ボタン**New**をクリックし、名前とサービスURLを追加します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Save your settings:</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>設定を保存します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>http://localhost/cgi-bin/mapserv?map=/home/user/mapserver_quickstart.map&amp;SERVICE=WMS&amp;REQUEST=GetCapabilities&amp;VERSION=1.3.0</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>http://localhost/cgi-bin/mapserv?map=/home/user/mapserver_quickstart.map&amp;SERVICE=WMS&amp;REQUEST=GetCapabilities&amp;VERSION=1.3.0</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Then you can connect to your service and add one or more layers of the service to your QGIS project. If you choose the layer with the ID 0 you can load the whole service with all layers at once.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>その後、サービスに接続し、サービスの1つまたは複数のレイヤをQGISプロジェクトに追加できます。ID 0のレイヤを選択すると、すべてのレイヤを含むサービス全体を一度にロードできます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>What Next?</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>次のステップ</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>This is a simple example, but you can do much, much more. The MapServer project website contains many resources to help you get started. Here's a few resources to check out next:</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>これは簡単な例ですが、できることはたくさんあります。MapServerプロジェクトのWebサイトには、作業を開始に役立つ多くのリソースが用意されています。次に、いくつかのをいくつか紹介しよう。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Read the `Introduction to MapServer &lt;https://mapserver.org/introduction.html#introduction&gt;`_.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>`MapServerの概要  &lt;https://mapserver.org/introduction.html#introduction&gt;`_を読む</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Have a look at the `MapServer Tutorial &lt;https://www.mapserver.org/tutorial/index.html&gt;`_ which contains more Mapfile examples.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>`MapServerチュートリアル &lt;https://www.mapserver.org/tutorial/index.html&gt;`_ をご覧ください</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Check the `OGC Support and Configuration &lt;https://www.mapserver.org/ogc/index.html&gt;`_ to learn more about OGC standards in MapServer (WMS, WFS, SLD, WFS Filter Encoding, WCS, SOS, etc.).</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>`OGC サポートと構成 &lt;https://www.mapserver.org/ogc/index.html&gt;`_をチェックして、MapServerのOGC標準（WMS、WFS、SLD、WFS Filter Encoding、WCS、SOSなど）の詳細を確認してください。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Ready to use MapServer? Then join the community on the `Mailing Lists &lt;https://www.mapserver.org/community/lists.html&gt;`_ to exchange ideas, discuss potential software improvements and ask questions.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>MapServerを使用する準備はできていますか?次に、`メーリングリスト&lt;https://www.mapserver.org/community/lists.html&gt;` _のコミュニティに参加して、アイデアを交換したり、ソフトウェアの改善点について話し合ったり、質問したりします。</seg>
      </tuv>
    </tu>
  </body>
</tmx>
