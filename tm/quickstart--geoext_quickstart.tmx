<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE tmx SYSTEM "tmx14.dtd">
<tmx version="1.4">
  <header creationtool="Translate Toolkit" creationtoolversion="3.1.1" segtype="sentence" o-tmf="UTF-8" adminlang="en" srclang="en" datatype="PlainText"/>
  <body>
    <tu>
      <tuv xml:lang="en">
        <seg>GeoExt Quickstart</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>GeoExt クイックスタート</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>GeoExt is a JavaScript library that runs in the browser, it combines and enhances the ExtJS framework and OpenLayers library. This quick start details the steps to create a rich web application using GeoExt components in less than 200 lines of code. We will be using the installed MapServer web services on OSGeoLive a MapServer to supply map layers to the application. Completing the steps below will result in the demo GeoExt application at http://localhost/geoext/.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>GeoExtはブラウザ上で動作するJavaScriptライブラリであり、ExtJSフレームワークとOpenLayersライブラリを組み合わせて拡張したものです。このクイックスタートでは、200行未満のコードでGeoExtコンポーネントを使用してリッチなWebアプリケーションを作成する手順について詳しく説明します。アプリケーションにマップ・レイヤーを提供するために、OSGeoLiveにインストールされたMapServer WebサービスをMapServerとして使用します。以下のステップを完了すると、http://localhost/geoext/ でGeoExtアプリケーションのデモが行われます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Create an HTML page</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>HTMLページを作成する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>In this step we will set-up an empty HTML page which will contain the application. We'll use the text editor FeatherPad installed on OSGeoLive to create a new HTML file at ``/var/www/html/geoext/demo.html``</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>このステップでは、アプリケーションを含む空のHTMLページを設定します。OSGeoLiveにインストールされているテキストエディタのFeatherPadを使って、``/var/www/html/geoext/demo.html`` に新しいHTMLファイルを作成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Open FeatherPad from the command line with elevated permissions, so you can save the file, using System Tools &gt; QTerminal and then running run the command below:</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>管理者特権でコマンドラインからFeatherPadを開き、[システムツール]&gt;[QTerminal]を使用してファイルを保存し、次のコマンドを実行して実行できるようにします。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Next paste in the HTML below, and save the file as ``/var/www/html/geoext/demo.html``. The file contains links to the ExtJS and OpenLayers JavaScript libraries, and two CSS files used to style ExtJS and OpenLayers components.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>次に下のHTMLに貼り付け、ファイルを``/var/www/html/geoext/demo.html``として保存します。このファイルには、ExtJSおよびOpenLayers JavaScriptライブラリへのリンクと、ExtJSおよびOpenLayersコンポーネントのスタイル設定に使用される2つのCSSファイルが含まれています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>We will use the ``Ext.Loader`` class to load in GeoExt JavaScript source files. These are all in the ``src`` folder in ``/var/www/html/geoext/``.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>``Ext.Loader``クラスを使用して、GeoExtのJavaScriptソースファイルをロードします。これらはすべて``/var/www/html/geoext/``の``src``フォルダにあります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>You should now be able to view an empty HTML page in Firefox at http://localhost/geoext/demo.html</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>http://localhost/geoext/demo.htmlでFirefoxの空のHTMLページを見ることができるようになりましたね。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>All the JavaScript in the following sections should be pasted after the ``// all JavaScript application code should go here`` comment in the ``Ext.onReady`` function. Placing code here ensures the JavaScript libraries have been loaded before running any custom JavaScript code.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>以下のセクションにあるすべてのJavaScriptは、``Ext.onReady``関数の``//all JavaScript application code should go here``コメントの後に貼り付ける必要があります。ここにコードを配置すると、カスタムJavaScriptコードを実行する前に、JavaScriptライブラリが確実にロードされます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Configure OpenLayers objects</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>OpenLayersオブジェクトを設定する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Next we will configure some OpenLayers objects used by the application.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>次に、アプリケーションが使用するOpenLayersオブジェクトを設定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>First lets create a map tile layer using OpenStreetMap, and some WMS layers that are available from the MapServer Itasca demo on OSGeoLive.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>まず、OpenStreetMapを使用してマップタイル画層を作成し、OSGeoLiveのMapServer Itascaデモで使用できるWMS画層をいくつか作成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Next we are going to add in a WFS vector layer - this is a little more complicated, but follows the same approach of creating a source and then a layer as the previous layers:</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>次に、WFSベクトルレイヤを追加します。これは少し複雑ですが、前のレイヤと同じ方法でソースとレイヤを作成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Now we are going to create our OpenLayers map object configured with the layers we just created. We will also set the center and zoom level of the map, and add in a select interaction so we can select features in our vector layer.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>次に、作成した画層で設定されたOpenLayersマップオブジェクトを作成します。また、マップの中心とズームレベルを設定し、ベクタライヤでフィーチャを選択できるように選択インタラクションに追加します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Work with GeoExt components</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>GeoExtコンポーネントを操作する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Now the map and layers have been configured we are going to create and configure our GeoExt components.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>これで、マップと画層が設定されました。次に、GeoExtコンポーネントを作成して設定します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>First of all we will create a ``GeoExt.component.Map``. This uses the OpenLayers map we created, and will be positioned in the 'center' region of our application.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>まず、``GeoExt.component.Map``を作成します。これは、作成したOpenLayersマップを使用し、アプリケーションの``中央``領域に配置されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Next we will create a layer tree component. The tree has its own data store - ``GeoExt.data.store.LayersTree``, which we will fill with layers from our OpenLayers map. The store will then be used to populate our tree panel. We will also add in a plugin to the tree to allow the map layer order to be changed by dragging and dropping the layers. The ``flex`` property causes the tree panel to fill up all available space in its region of the screen.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>次に、画層ツリーコンポーネントを作成します。ツリーには独自のデータストア``GeoExt.data.store.LayersTree``があり、OpenLayersマップのレイヤで埋めます。このストアは、ツリー・パネルへの入力に使用されます。また、ツリーにプラグインを追加して、レイヤをドラッグアンドドロップして地図レイヤの順序を変更できるようにします。``flex``プロパティーを指定すると、ツリー・パネルは画面の領域内の使用可能なスペースをすべて埋めます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>We are also going to create a grid component to display the attributes of features in our WFS layer. Similar to the layer tree store and tree panel, we create a ``GeoExt.data.store.Features`` store and a grid panel.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>また、WFSレイヤのフィーチャの属性を表示するグリッドコンポーネントを作成します。レイヤーツリーストアとツリーパネルと同様に、``GeoExt.data.store.Features``ストアとグリッドパネルを作成します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Our final GeoExt component is an overview map - ``GeoExt.component.OverviewMap``. We will configure this to display the OpenStreetMap layer we created earlier, and place it in an ExtJS panel.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>我々の最後のGeoExtコンポーネントは概観地図-``GeoExt.componnet.OverviewMap``である。先ほど作成したOpenStreetMapレイヤーを表示するように設定し、ExtJSパネルに配置します。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>Create a viewport</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>ビューポートを作成する</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The final step in creating our application is to create a viewport - a container representing the application which will display all the components we created above.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>アプリケーションを作成する最後のステップは、ビューポートを作成することです。ビューポートとは、上記で作成したすべてのコンポーネントを表示するアプリケーションを表すコンテナです。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>You should now be able to refresh the link http://localhost/geoext/demo.html in your browser and see a complete GeoExt application similar to the image below.</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>ブラウザでリンクhttp://localhost/geoext/demo.htmlを更新すると、下の画像のような完全なGeoExtアプリケーションが表示されます。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>What's next?</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>次は?</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The `GeoExt homepage &lt;https://geoext.github.io/geoext3/&gt;`_ contains full `API documentation &lt;https://geoext.github.io/geoext3/v3.1.0/docs&gt;`_ and examples</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>`GeoExtのホームページ&lt;https://geoext.github.io/geoext3/&gt;`_には完全な`APIドキュメント&lt;https://geoext.github.io/geoext3/v3.1.0/docs&gt;`_と例があります。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>A `GeoExt workshop &lt;https://github.com/geoext/geoext3-ws&gt;`_ details all the steps for configuring and using GeoExt3 in your ExtJS applications</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>`GeoExtワークショップ&lt;https://github.com/geoext/GeoExt3-ws&gt;`_では、ExtJSアプリケーションでGeoExt3を設定および使用するためのすべての手順について詳しく説明しています。</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The `OpenLayers v4.6.5 API docs &lt;https://openlayers.org/en/v4.6.5/apidoc&gt;`_</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>`OpenLayers v4.6.5 APIドキュメント &lt;https://openlayers.org/en/v4.6.5/apidoc&gt;`_</seg>
      </tuv>
    </tu>
    <tu>
      <tuv xml:lang="en">
        <seg>The `ExtJS 6.2.0 API docs &lt;https://docs.sencha.com/extjs/6.2.0/&gt;`_</seg>
      </tuv>
      <tuv xml:lang="ja">
        <seg>`ExtJS 6.2.0 API ドキュメント &lt;https://docs.sencha.com/extjs/6.2.0/&gt;`_</seg>
      </tuv>
    </tu>
  </body>
</tmx>
